import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import {
  Box,
  Button,
  Container,
  FormControl,
  Paper,
  Stack,
  TextField,
  Typography,
  Alert,
  InputLabel,
  OutlinedInput,
  List,
  ListItem,
  ListItemButton,
  ListItemIcon,
  Checkbox,
  ListItemText,
} from "@mui/material";
import { useFormik } from "formik";
import { IListTodo, ITodo } from "../types/Todo";
import { useState, useEffect } from "react";
import produce from "immer";

const Home: NextPage = () => {
  const [listToDo, setListToDo] = useState<ITodo[]>([]);

  const formik = useFormik({
    initialValues: {
      description: "",
    },
    onSubmit: (values) => {
      setListToDo(
        produce((draft) => {
          draft.push({
            id: getRandomId(),
            description: values.description,
            isDone: false,
          });
        })
      );
      formik.resetForm();
    },
  });

  const getRandomId = () => Math.floor(Math.random() * 100000);

  const setDone = (itemId: number, done: boolean) => {
    setListToDo(
      produce((draft) => {
        const index = draft.findIndex((item) => item.id === itemId);
        draft[index].isDone = done;
      })
    );
  };

  const handleChangeCheckbox = (id: number, done: boolean) => () =>
    setDone(id, done);

  const deleteCheckedTodo = (itemId: number) => {
    setListToDo(
      produce((draft) => {
        const index = listToDo.findIndex((todo) => todo.id === itemId);
        draft.splice(index, 1);
      })
    );
  };

  const handleDeleteTodo = (id: number) => () => deleteCheckedTodo(id);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container maxWidth="sm">
        <Paper
          sx={{
            padding: "16px",
            width: "100%",
            maxWidth: "350px",
            display: "block",
            margin: "0 auto",
            hight: "50%",
            position: "fixed",
            top: "30%",
            left: "50%",
            transform: "translate(-50%, -50%)",
            overflowY: "auto",
          }}
        >
          <div>TODO</div>

          <FormControl component="form" onSubmit={formik.handleSubmit}>
            <OutlinedInput
              id="description"
              name="description"
              type="description"
              onChange={formik.handleChange}
              value={formik.values.description}
            />
          </FormControl>

          <List
            sx={{ width: "100%", maxWidth: 360, bgcolor: "background.paper" }}
          >
            {listToDo.map((todo) => (
              <ListItem key={todo.id}>
                <ListItemButton
                  role={undefined}
                  onClick={handleChangeCheckbox(todo.id, !todo.isDone)}
                  dense
                >
                  <ListItemIcon>
                    <Checkbox
                      edge="start"
                      checked={todo.isDone}
                      tabIndex={-1}
                      disableRipple
                    />
                  </ListItemIcon>
                  <ListItemText primary={`${todo.description}`} />
                </ListItemButton>
                <Button onClick={handleDeleteTodo(todo.id)}>Delete</Button>
              </ListItem>
            ))}
          </List>
        </Paper>
      </Container>
    </div>
  );
};

export default Home;
